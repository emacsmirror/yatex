------------------------------------------------------------------------
			野鳥用付加関数の作成方法
------------------------------------------------------------------------


【付加関数とは】

	  begin 型補完で、「tabular 環境を入力している時に、"{|c|c|c|}" と
	か、また、table 環境の入力時に"[tbp]" とかも一緒に入力すればいいの
	に」などと思うことはありませんか。もちろんこれを自動入力する関数は
	簡単にサポートできるでしょう。

	  しかし、tabular 環境に限らず、LaTeX の環境の引数には、各人お決ま
	りのフォーマットがあるものです。たとえば凝った表を書く時の tabular
	環境の引数は、かなり複雑なので、上のような自動入力関数よりも、

		"{@{\vrule width 1pt\ }|||@{\ \vrule width 1pt}}"

	を挿入するだけの単純な関数のほうが、嬉しい人もいるでしょう。あるい
	は、「そんなの要らない。他の tabular をコピーして来たほうが早い。」
	と思う人もいるでしょう。

	  YaTeX の付加関数は、あらかじめ○○環境用のお仕着せの特別関数を用
	意しておくのではなく、○○環境用の特別関数が欲しくなったら独自の関
	数を定義する、というコンセプトに基づくもので、付加関数の登録のため
	の手続きをすることなく、関数を定義したその瞬間から使えるようになり
	ます。「必要なのは、defun だけ」です。


【準備】

	  さすがに、関数を書くだけでは使えません:-)。yatex-mode 起動時には、
	その関数を定義したファイルがロードされていなくてはなりません。関数
	を定義するファイル名を yatexadd.el(またはバイトコンパイルした形式
	のyatexadd.elc)にし、そのファイルを load-path 中に置いておけば、 
	野鳥が自動的にロードします。それ以外のファイル名にする場合は、
	yatex-mode-hook に、付加関数を定義する Emacs-Lisp ファイルをロード
	するような仕掛けを書いておくのがよいでしょう。


【関数名】

	  作成する付加関数名は、補完入力した名前の先頭に YaTeX: を付け足し
	たものにします。例えば(begin型補完の) tabular 環境に対して付加関数
	を作成したい場合は YaTeX:tabular という関数名で定義します。


【呼ばれ方】

	  野鳥本体は、begin型補完とsection型補完、およびmaketitle型補完の
	入力時に付加関数の存在を調べてから呼び出します。begin型補完の場合 
	\begin{環境名} が自動入力された直後に呼び出されます。section型補完
	では第一引数の補完の直前、maketitle型補完の場合は、コマンド名の直
	後(一つのスペースを挿入する直前)に呼び出されます。


【関数定義】

	  begin型補完では、\begin{環境名}の直後に付加する文字列、section型
	補完では、LaTeXコマンド名と第一引数の間に位置する文字列、maketitle
	型補完では、LaTeXコマンド名の直後に位置する文字列を返すような関数
	を定義して下さい。
	(例)
		\begin{table}[ht]
		             ~~~~
		\put(100,200){}
		    ~~~~~~~~~
		\sum_{i=0}^{n} 
		    ~~~~~~~~~~
	たんに、いつでも {|c|c|c|} を入れるだけで良いのなら、

		(defun YaTeX:tabular ()
		  "{|c|c|c|}")

	とだけ、書けばよく、前述の、複雑な定型 tabular フォーマットを挿入
	するための関数を定義する場合は、次のようにします。

		(defun YaTeX:tabular ()
		  "{@{\\vrule width 1pt\\ }|||@{\\ \\vrule width 1pt}}")

	この時、Emacs-Lisp 中の文字列では、\ 自身は、\\ と表記することなどに
	注意して下さい。

	  また、{} の中を、補完時に直接キーボードから読み込ませたい時は、

		(defun YaTeX:tabular ()
		  (concat "{" (read-string "Rule: ") "}"))

	などとすれば良いでしょう。


【参考】

	  付加関数の定義の例を yatexadd.el に用意しました。実際に独自の付
	加関数を定義する時の参考として下さい。

	  有用と思われる関数について、簡単に説明します。

	・関数	YaTeX:read-position
	  引数	[] の中に入れてもよい文字を羅列した文字列。
	  説明	[htb] などのような location 指定を作成します。何も入力せず
		リターンを押すと、[]自体も省略されます。[]の中に来るべき文
		字が htbp に限られているなら、(YaTeX:read-position "htbp")
		と呼び出します。

	・関数	YaTeX:read-coordinates
	  引数	基本プロンプト, X座標プロンプト, Y座標プロンプト(全て省略可)
	  説明	「基本プロンプト X座標プロンプト:」というプロンプトを出し
		て、X座標を読み込み、「基本プロンプト Y座標プロンプト:」を
		出して、Y座標を読み込み、(X座標,Y座標) の様な形式を作成します。
		何も入力せずリターンを押しても、(,)が返されます。
		各プロンプトのデフォルトはそれぞれ、Dimension, X, Y です。

	・関数	YaTeX:check-comletion-type
	  引数	'begin または、'section または、'maketitle
	  説明	付加関数が呼ばれる時に、行われている補完の形式が、引数で与
		えたものであるかどうか調べ、そうでない場合にエラー終了する。
		なお、変数 YaTeX-current-completion-type に現在の補完の型
		を表わすシンボル(この関数の引数と同様)が格納されています。


【最後に】

	  快適な関数を定義したなら、そしてそれを公開してもよいと思われたな
	ら、筆者までお送り下さい。次の yatexadd.el に取り込んで行きたいと
	思います。


								   広瀬雄二
							yuuji@ae.keio.ac.jp
							pcs39334(ASCII-NET)
